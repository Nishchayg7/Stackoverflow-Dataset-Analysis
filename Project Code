

HIVE QUERRIES:




1) count number of distinct user id
-> select count(distinct(i)) from answers;



2) average answers for each question
->  select avg(qac) from answers;



3) average views from each question;
-> select avg(qvc) from answers;



4) average views on php tag
select avg(qvC) from answers where tags='"php';




5) average answers on php tag
select avg(qac) from answers where tags='"php';




6) select tags, max answers , max views from answers for each tag;
select tags, MAX(qac), MAX(qvc) from answers GROUP BY tags;




7) select max number of answers in each tag.
select tags,MAX(answercount) from posts GROUP BY tags;




8)No. of questions in each tag.
select tags,COUNT(tags) from posts GROUP BY tags;



9)User with age>18
select count(DisplayName) from users where age>18;




10)users with age<18
select count(DisplayName) from users where age<18;




11)no. of users in each location.
select count(DisplayName),Location from users GROUP by Location ;



12)user with max views
select DisplayName,Views from users where views in (select max(views) from users); 




13)most reputed users.
select DisplayName,reputation from users where reputation in (select max(Reputation) from users); 



14)tag with max question
select TagName,Countt from tags where Countt in (select max(Countt) from tags); 




15) What are the tags of questions which got answered within 1 hour?

SELECT DISTINCT ans.tags from ans where (ans.at - ans.qt) < 3600;




16) What are the number of questions that got answered within 1 hour?

SELECT count(answers.slno) from answers where (answers.at - answers.qt) < 3600;




17) What are the top 10 most common tags?

SELECT answers.tags, COUNT(answers.tags) as Count_T from answer GROUP BY answer.tags ORDER BY Count_T desc limit 10;




18) What is the average time to answer a question?

SELECT avg(answers.at - answers.qt) from answers;



19) What are the distinct location of the different users;

Select distinct displayname , location from users where 'users_id' = 1;




20) Active user with most answer ?

select posts.owneruserid, users.displayname, users.reputation, users.location, users.upvotes, users.downvotes AS answer_cnt from posts JOIN users ON posts.owneruserid=users.id GROUP BY users.displayname, posts.owneruserid, users.reputation, users.upvotes, users.downvotes , users.location ORDER BY answer_cnt DESC; 




21) Active user with most used tags of "StackOverflow" from the titles ?

select posts.owneruserid as users_id,users.displayname,users.reputation,users.location,users.upvotes,users.downvotes as post_cnt from posts JOIN users on posts.owneruserid = users.id where posts.title LIKE '%Stack Overflow%' group by users_id , users.displayname , posts.owneruserid , users.reputation , users.upvotes , users.downvotes, users.location ORDER BY post_cnt DESC;




22) Who are most Active user with most posts questions? 

select posts.owneruserid as users_id,users.displayname,users.reputation, users.location as post_cnt FROM posts JOIN users ON posts.owneruserid = users.id GROUP BY users_id , users.displayname , posts.owneruserid , users.reputation , users.location ORDER BY post_cnt DESC;



 
23)  posts qeustion with highest favorite count

 select id,title,favouritecount from posts where YEAR(creationdate)==2017 ORDER BY favouritecount DESC;




---------------------------------------------------------------------------



PIG QUERRIES



Most Active Users: 



loaded = LOAD 'input text file path' Using PigStorage() AS (userId:int, reputation:int, creationDate:chararray, lastAccessDate:chararray, displayName:chararray, views:int, upvote:int, downvote:int, accountId:int);
qfiltered = FILTER loaded BY NOT(lastAccessDate MATCHES '^40997844.*');
generated = FOREACH qfiltered GENERATE views, userId;
ordered = ORDER generated BY views DESC;
limited = LIMIT ordered 100;
dump limited;



Top Questions :




loaded =LOAD 'input txt file path' Using PigStorage() AS (rowId:int, ownerUserId:int, creationDate:long, postTypeId:int, title:chararray, viewCount:float, score:float, tags:chararray);
filtered = FILTER loaded BY score>=1;
grouped = GROUP filtered ALL;
avg = FOREACH grouped GENERATE AVG(filtered.viewCount) AS ave;
scorebyview = FOREACH filtered GENERATE rowId,ROUND((score / viewCount) * avg.ave) AS maxscore,title; 
ordered = ORDER scorebyview BY maxscore DESC;
top100 = LIMIT ordered 100;
dump top100;


Most Valuable Users :



loaded = LOAD â€˜input txt file path' Using PigStorage() AS (userId:int, reputation:int, creationDate:chararray, lastAccessDate:chararray, displayName:chararray, views:int, upvote:int, downvote:int, accountId:int);
qfiltered = FILTER loaded BY NOT(lastAccessDate MATCHES '^40997844.*');
generated = FOREACH qfiltered GENERATE reputation, userId;
ordered = ORDER generated BY reputation DESC;
limited = LIMIT ordered 100;
dump limited;




Count Badge of Users :

A = LOAD 'Input Text File path' Using PigStorage() AS (rowId:int, UserId:int, badgeName:chararray, Date:long)
B = GROUP A BY badgeName;
C = FOREACH B GENERATE group,COUNT($1.userId) AS user;
D = ORDER C BY user DESC;                             
Dump D;







	
